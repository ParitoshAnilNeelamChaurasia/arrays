// https://leetcode.com/problems/find-the-power-of-k-size-subarrays-ii/description/

class Solution {
public:
    vector<int> resultsArray(vector<int>& nums, int k) {

        int n = nums.size() ;

        if(k == 1)
        return nums ;

        vector<int> arr(n,0) ;

        for(int i = 0 ; i < n - 1; ++i)
        {
            if(nums[i] + 1 != nums[i+1])
            {
                arr[i+1] = 1 ;
            }
        }

        int count = 0 ;

        for(int i = 0 ; i < k ; ++i)
        {
            if(arr[i] == 1)
            {
                count++ ;
            }
        }

        vector<int> ans ;
        if(count == 0)
        {
            ans.push_back(nums[k-1]) ;
        }
        else
        {
            ans.push_back(-1) ;
        }

        for(int i = k ; i < n ; ++i)
        {
            if(arr[i] == 1)
            {
                count++ ;
            }
            if(arr[i-k+1] == 1)
            {
                count-- ;
            }
            if(count == 0)
            {
                ans.push_back(nums[i]) ;
            }
            else
            {
                ans.push_back(-1) ;
            }
        }
        return ans ;
    }
};
